#!/bin/sh
# -*-scheme-*-
exec guile -e "(@@ (gas) main)" -s "$0" "$@"
!#

;;; (gas) --- Guile/Apple/Script

;; Copyright (C) 2022 Aleix Conchillo Flaque <aconchillo@gmail.com>
;;
;; This file is part of gas.
;;
;; gas is free software: you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation; either version 3 of the License, or
;; (at your option) any later version.
;;
;; gas is distributed in the hope that it will be useful, but
;; WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
;; General Public License for more details.
;;
;; You should have received a copy of the GNU General Public License
;; along with gas. If not, see https://www.gnu.org/licenses/.

;;; Commentary:

;; Guile/Apple/Script

;;; Code:

(define-module (gas)
  #:use-module (ice-9 match)
  #:use-module (ice-9 popen)
  #:use-module (ice-9 textual-ports)
  #:use-module (language guilescript compile))

(define *guile-logo-icns* "/usr/local/share/gas/guile.icns")
(define *applet-icns* "Contents/Resources/applet.icns")

(define (create-osascript-file js)
  (let* ((port (mkstemp "/tmp/gas-XXXXXX"))
         (tmpfile (port-filename port)))
    (chmod port #o700)
    (put-string
     port
     (string-append "#!/usr/bin/osascript -l JavaScript\n\n" js))
    (close-port port)
    tmpfile))

(define (run-osascript js)
  (let* ((tmpfile (create-osascript-file js)))
    (system tmpfile)
    (delete-file tmpfile)))

(define (create-osascript-app app-name filename)
  (let* ((js (compile-file filename))
         (tmpfile (create-osascript-file js)))
    (system (format #f "osacompile -l JavaScript -o ~a ~a" app-name tmpfile))
    (when (file-exists? *guile-logo-icns*)
      (copy-file *guile-logo-icns* (format #f "~a/~a" app-name *applet-icns*)))
    (delete-file tmpfile)))

(define (run-string str)
  (run-osascript (compile (call-with-input-string str read-syntax))))

(define (run-file filename)
  (run-osascript (compile-file filename)))

(define main
  (match-lambda
    ((_ "-e" str) (run-string str))
    ((_ "-a" app-name filename) (create-osascript-app app-name filename))
    ((_ filename) (run-file filename))
    ((_)
     (display "Usage: gas filename.gs")
     (newline)
     (exit 1))))
